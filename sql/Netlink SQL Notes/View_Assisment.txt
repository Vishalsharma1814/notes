VIEW :
=======

1. From the following table, create a view for those salespersons belong to the city 'New York'. 

Sample table: salesman

salesman_id |    name    |   city   | commission 
-------------+------------+----------+------------
        5001 | James Hoog | New York |       0.15
        5002 | Nail Knite | Paris    |       0.13
        5005 | Pit Alex   | London   |       0.11
        5006 | Mc Lyon    | Paris    |       0.14
        5007 | Paul Adam  | Rome     |       0.13
        5003 | Lauson Hen | San Jose |       0.12

create table salesman(
 salesman_id  int,
 name varchar(255) ,
 city varchar (255),
 commission  varchar(255) 
);

INSERT INTO public.salesman
(salesman_id, name, city, commission)
VALUES(5001, 'James Hoog', 'New York', ' 0.15'),
(5002, 'Nail Knite', 'Paris', ' 0.15'),
(5005, 'Pit Alex', 'London', ' 0.15'),
(5006, 'Mc Lyon', 'Paris', ' 0.15'),
(5007, 'Paul Adam', 'Rome', ' 0.15'),
(5003, 'Lauson Hen', 'San Jose', ' 0.15');
2. From the following table, create a view for all salespersons. Return salesperson ID, name, and city.  

Sample table: salesman


create view simple_view2 as 
select salesman_id, name, city  
from salesman;

select * from simple_view2;


3. From the following table, create a view to find the salespersons of the city 'New York'.

create view simple_view as 
select salesman_id, name, city, commission  
from salesman  e 
where e.city = 'New York';

select * from simple_view;



4. From the following table, create a view to count the number of customers in each grade.  

Sample table: customer

 customer_id |   cust_name    |    city    | grade | salesman_id 
-------------+----------------+------------+-------+-------------
        3002 | Nick Rimando   | New York   |   100 |        5001
        3007 | Brad Davis     | New York   |   200 |        5001
        3005 | Graham Zusi    | California |   200 |        5002
        3008 | Julian Green   | London     |   300 |        5002
        3004 | Fabian Johnson | Paris      |   300 |        5006
        3009 | Geoff Cameron  | Berlin     |   100 |        5003
        3003 | Jozy Altidor   | Moscow     |   200 |        5007
        3001 | Brad Guzan     | London     |       |        5005


create view count_grade as
select max(grade) from customer group by grade;

select * from count_grade;


5. From the following table, create a view to count the number of unique customer, compute average and total purchase amount of customer orders by each date.

Sample table : orders

ord_no      purch_amt   ord_date    customer_id  salesman_id
----------  ----------  ----------  -----------  -----------
70001       150.5       2012-10-05  3005         5002
70009       270.65      2012-09-10  3001         5005
70002       65.26       2012-10-05  3002         5001
70004       110.5       2012-08-17  3009         5003
70007       948.5       2012-09-10  3005         5002
70005       2400.6      2012-07-27  3007         5001
70008       5760        2012-09-10  3002         5001
70010       1983.43     2012-10-10  3004         5006
70003       2480.4      2012-10-10  3009         5003
70012       250.45      2012-06-27  3008         5002
70011       75.29       2012-08-17  3003         5007
70013       3045.6      2012-04-25  3002         5001



create view unique_count as
select distinct customer_id, avg(purch_amt), sum(purch_amt) from orders group by ord_date;

6. From the following tables, create a view to get the salesperson and customer by name. Return order name, purchase amount, salesperson ID, name, customer name.

Sample table: salesman

Sample table: customer

Sample table: orders


output:
 ord_no | purch_amt | salesman_id |  name   |   cust_name
--------+-----------+-------------+---------+----------------
  70010 |   1983.43 |        5006 | Mc Lyon | Fabian Johnson
  70015 |    322.00 |        5006 | Mc Lyon | Varun


create view unique_count as
select o.ord_no, o.purch_amt, s.salesman_id, c.name, c.cust_name
from customer c
inner join salesman s on pkc = pks
inner join orders o on pko = pkc;


7. From the following tables, create a view to find the salesperson who handles a customer who makes the highest order of a day. Return order date, salesperson ID, name.

Sample table: salesman

Sample table: orders

create view high_order_salesperson as 
select order_date, salesperson_id, name from salesman where order_amount = (select max(order_amount) from customer) group by order_date; 




8. From the following table, create a view to find all the customers who have the highest grade. Return all the fields of customer.

Sample table: customer

create view highest_grade as 
select * from customer where grade = (select max(grade) from customer );




10. From the following table, create a view to count number of the salesperson in each city. Return city, number of salespersons.

Sample table: salesman

create view salesman_count as
select city, count(sales_person) from salesman group by city;

select * from salesman_count;

